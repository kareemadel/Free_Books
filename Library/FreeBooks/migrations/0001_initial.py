# Generated by Django 2.0.2 on 2018-02-13 15:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Author ID')),
                ('name', models.CharField(max_length=50, verbose_name='Author name')),
                ('pic', models.ImageField(blank=True, upload_to='', verbose_name='Author Picture')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Date of Death')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Book ID')),
                ('title', models.CharField(max_length=50, verbose_name='Book Name')),
                ('publish_date', models.DateField(blank=True, null=True, verbose_name='Published at')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='Country')),
                ('link', models.URLField(blank=True, verbose_name='Link')),
                ('pic', models.ImageField(blank=True, upload_to='', verbose_name='Book Cover')),
                ('summary', models.TextField(blank=True, verbose_name='Summary')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Write', to='FreeBooks.Author', verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Book',
                'verbose_name_plural': 'Books',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Category')),
                ('name', models.CharField(max_length=50, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='FavouriteCategory',
            fields=[
                ('favorite_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Favorite ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'FavouriteCategory',
                'verbose_name_plural': 'FavouriteCategories',
            },
        ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('follow_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Follow ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Author', verbose_name='Author')),
            ],
            options={
                'verbose_name': 'Follower',
                'verbose_name_plural': 'Followers',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('pic', models.ImageField(blank=True, upload_to='user_profiles', verbose_name='Profile Picture')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('favourite_category', models.ManyToManyField(related_name='favored_by', through='FreeBooks.FavouriteCategory', to='FreeBooks.Category')),
                ('follows', models.ManyToManyField(related_name='followed_by', through='FreeBooks.Follower', to='FreeBooks.Author')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('rate_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Rate ID')),
                ('score', models.PositiveSmallIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Book', verbose_name='Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Profile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Rate',
                'verbose_name_plural': 'Rates',
            },
        ),
        migrations.CreateModel(
            name='Read',
            fields=[
                ('read_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Read ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Book', verbose_name='Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Profile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Read',
                'verbose_name_plural': 'Reads',
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('wish_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Wish ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Book', verbose_name='Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Profile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'WishList',
                'verbose_name_plural': 'WishLists',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='rating',
            field=models.ManyToManyField(related_name='rated_by', through='FreeBooks.Rate', to='FreeBooks.Book'),
        ),
        migrations.AddField(
            model_name='profile',
            name='reading',
            field=models.ManyToManyField(related_name='read_by', through='FreeBooks.Read', to='FreeBooks.Book'),
        ),
        migrations.AddField(
            model_name='profile',
            name='wish',
            field=models.ManyToManyField(related_name='wished_by', through='FreeBooks.WishList', to='FreeBooks.Book'),
        ),
        migrations.AddField(
            model_name='follower',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Profile', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='favouritecategory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FreeBooks.Profile', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='has_books', to='FreeBooks.Category'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlist',
            unique_together={('user', 'book')},
        ),
        migrations.AlterUniqueTogether(
            name='read',
            unique_together={('user', 'book')},
        ),
        migrations.AlterUniqueTogether(
            name='rate',
            unique_together={('user', 'book')},
        ),
        migrations.AlterUniqueTogether(
            name='follower',
            unique_together={('user', 'author')},
        ),
        migrations.AlterUniqueTogether(
            name='favouritecategory',
            unique_together={('user', 'category')},
        ),
    ]
